<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on Demon的博客</title>
		<link>https://demon-github1996.github.io/posts/</link>
		<description>Recent content in Posts on Demon的博客</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>zh-CN</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Fri, 21 Aug 2020 00:00:00 +0000</lastBuildDate>
		<atom:link href="https://demon-github1996.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Day2 运算符与逻辑语句</title>
			<link>https://demon-github1996.github.io/posts/day02/</link>
			<pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate>
			
			<guid>https://demon-github1996.github.io/posts/day02/</guid>
			<description>Day2 运算符与逻辑语句 昨日回顾： ​	java的介绍 ​	java是一门语言 ​	java的火 ​	jdk ​	jdk的下载和安装 ​	HelloWorld程序 ​	dos窗口 ​	环境变量 ​	HelloWorld编写编译和运行 ​	HelloWorld的详细的解释 ​	书写习惯 ​	notepad++ ​	java的基本语法 ​	程序的基本组成单位：
//dfsakdjfhad ​	class HelloWorld { ​	public static void main(String[] args){ ​	int a = 10; ​	System.out.println(a); ​	{ ​	int b =10; ​	System.out.println(b); ​	} ​	} ​	} ​	注释 ​	关键字 ​	标识符 ​	数据 ​	常量 10 ​	变量</description>
			<content type="html"><![CDATA[<h1 id="day2-运算符与逻辑语句">Day2 运算符与逻辑语句</h1>
<h2 id="昨日回顾">昨日回顾：</h2>
<p>​	java的介绍
​		java是一门语言
​		java的火
​		jdk
​		jdk的下载和安装
​	HelloWorld程序
​		dos窗口
​		环境变量
​		HelloWorld编写编译和运行
​		HelloWorld的详细的解释
​		书写习惯
​		notepad++
​	java的基本语法
​		程序的基本组成单位：</p>
<div class="highlight"><pre class="chroma"><code class="language-JAVA" data-lang="JAVA">			<span class="c1">//dfsakdjfhad
</span><span class="c1"></span><span class="err">​</span>			<span class="kd">class</span> <span class="nc">HelloWorld</span> <span class="o">{</span>
<span class="err">​</span>				<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
<span class="err">​</span>					<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="err">​</span>					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>

<span class="err">​</span>				<span class="o">{</span>
<span class="err">​</span>					<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span><span class="n">10</span><span class="o">;</span>
<span class="err">​</span>					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
<span class="err">​</span>				<span class="o">}</span>
<span class="err">​</span>			<span class="o">}</span>
<span class="err">​</span>		<span class="o">}</span>
</code></pre></div><p>​		注释
​		关键字 
​		标识符 
​		数据
​			常量 10
​			变量</p>
<p>​		注释
​		关键字 
​		标识符 
​		数据
​			常量 10
​			变量</p>
<p>​		符号：
​			基本符号：
​				空格 ： 所有的关键字 标识符 中间都需要用空格隔开。
​				{}  : 用来盛多条语句的  表示一个范围。
​				;  一个分号是一条语句
​				() :  强制转换
​					  运算 
​					  方法
​					  逻辑语句
​				[] ： 数组
​				&quot;&rdquo; 字符串
​				'&rsquo; 字符
​				.  表示调用的过程
​				
​			运算符：</p>
<h2 id="类型转换">类型转换(☆☆☆☆☆)</h2>
<h3 id="隐式类型转换">隐式类型转换：</h3>
<p>​			<!-- raw HTML omitted --><strong>规则： 是从小范围的数据类型 直接转到 大范围的数据类型</strong><!-- raw HTML omitted -->
​			范围的排序：
​				byte &lt; short = char &lt; int &lt; long &lt; float &lt; double 
​				举例：
​			int a =10;
​			long b = a; 
​		
​		用途： 比如两个软件进行交互， 对方发给你一个整数， 我就需要用long类型去接收。因为你不确定他给传的是一个多大的证书，
​			所以你应该  不管他发给你多大的证书， 你都应该接收， 你就可以用 最大的整数类型 long去接收。
​		
​		运行中的隐式类型转换： （运算的原理： 不同的数据类型进行运算，必须先统一为同一种类型才可以运算，否则不能运算。）
​			<strong>1：比int大(或者等于)的类型， 在进行运算的时候， 小类型会自动提升为大类型进行运算：</strong>
​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
					<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
						<span class="kt">long</span> <span class="n">lo</span> <span class="o">=</span> <span class="n">10L</span><span class="o">;</span>
						<span class="kt">double</span> <span class="n">d</span> <span class="o">=</span> <span class="n">3</span><span class="o">.</span><span class="na">14</span><span class="o">;</span>
						<span class="c1">//long lon = lo + d; // 编译报错。   lo会先提升为 double类型。然后再和 double类型的d进行运算 最后的结果是double类型。
</span><span class="c1"></span>						<span class="c1">//long lon = (long) lo + d; // 编译报错 
</span><span class="c1"></span>						<span class="kt">long</span> <span class="n">lon</span> <span class="o">=</span> <span class="o">(</span><span class="kt">long</span><span class="o">)(</span><span class="n">lo</span> <span class="o">+</span><span class="n">d</span><span class="o">)</span> <span class="o">;</span> <span class="c1">// 正确
</span><span class="c1"></span>
<span class="err">​</span>						<span class="kt">double</span> <span class="n">d1</span> <span class="o">=</span> <span class="n">lo</span> <span class="o">+</span> <span class="n">d</span><span class="o">;</span> <span class="c1">// 正确。
</span><span class="c1"></span><span class="err">​</span>					<span class="o">}</span>
<span class="err">​</span>				<span class="o">}</span>
</code></pre></div><p>​			<strong>2：比int小的数据类型， 在进行运算的时候，所有的都要提升为 int类型 再去运算。</strong>
​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">	<span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
<span class="err">​</span>					<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
<span class="err">​</span>						<span class="kt">byte</span> <span class="n">b</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="err">​</span>						<span class="kt">short</span> <span class="n">s</span><span class="o">=</span> <span class="n">20</span><span class="o">;</span>
<span class="err">​</span>						<span class="c1">//short sh = b +s; // 编译报错  b 和s 都会提升为int类型  所以最后的结果也是int类型。
</span><span class="c1"></span><span class="err">​</span>						<span class="c1">//short sh = (short) b + s ; // 编译报错
</span><span class="c1"></span><span class="err">​</span>						<span class="kt">short</span> <span class="n">sh</span> <span class="o">=</span> <span class="o">(</span><span class="kt">short</span><span class="o">)(</span><span class="n">b</span><span class="o">+</span><span class="n">s</span><span class="o">);</span> <span class="c1">// 正确的
</span><span class="c1"></span>
<span class="err">​</span>						<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">b</span> <span class="o">+</span><span class="n">s</span><span class="o">;</span> <span class="c1">// 正确的。
</span><span class="c1"></span><span class="err">​</span>					<span class="o">}</span>
<span class="err">​</span>				<span class="o">}</span>

<span class="err">​</span>	
</code></pre></div><h3 id="强制类型转换">强制类型转换：</h3>
<p>​		<strong>规则： 是从大范围的数据类型 强制转到 小范围的数据类型</strong>
​			<strong>1：明确能转过去，数据是正确的， 这时候可以强制类型转换。</strong>
​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">	<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
	<span class="kt">byte</span> <span class="n">b</span> <span class="o">=</span> <span class="o">(</span><span class="kt">byte</span><span class="o">)</span><span class="n">a</span><span class="o">;</span> 
</code></pre></div><p>​			<strong>2：不推荐你使用的，  明知道转过去 撑不了这么大的数据， 还要继续转</strong>
​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">		<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">200</span><span class="o">;</span>
		<span class="kt">byte</span> <span class="n">b</span> <span class="o">=</span> <span class="o">(</span><span class="kt">byte</span><span class="o">)</span><span class="n">a</span><span class="o">;</span>  <span class="c1">// a 已经不是200了，    不确定的数字
</span></code></pre></div><p>​			<strong>3：强化去除小数点后面的数据</strong>
​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">			<span class="kt">double</span> <span class="n">d</span> <span class="o">=</span> <span class="n">3</span><span class="o">.</span><span class="na">14</span><span class="o">;</span>
			<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">d</span><span class="o">;</span> <span class="c1">// a 就是3了。
</span></code></pre></div><p>​</p>
<h3 id="类型转换的注意事项">类型转换的注意事项：</h3>
<p>​		<strong>1：boolean类型 不参与任何的类型转换</strong>
​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">		<span class="kt">boolean</span> <span class="n">b</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">b</span><span class="o">;</span> <span class="c1">// 编译报错。
</span><span class="c1"></span>		<span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">b</span><span class="o">;</span>
		
</code></pre></div><pre><code>**2 :常量优化机制**
</code></pre>
<p>​		1：	写一个整数常量的时候， 整数常量也是有数据类型的，默认是 int类型，</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">10</span><span class="o">);</span> <span class="c1">// 10 是常量 同时也是int类型的数据
</span></code></pre></div><p>​		2：	比int小的类型 才有常量优化机制：</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">				<span class="kt">byte</span> <span class="n">a</span> <span class="o">=</span> <span class="n">100</span><span class="o">;</span> <span class="c1">// 正确的。 100虽然是int类不假，依然可以赋值， 这就叫做常量优化机制。
</span><span class="c1"></span>				<span class="c1">// 底层 byte a = (byte)100;
</span><span class="c1"></span>
<span class="err">​</span>				<span class="c1">// 只能是常量有 优化机制
</span><span class="c1"></span><span class="err">​</span>				<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">100</span><span class="o">;</span>
<span class="err">​</span>				<span class="c1">//byte c = b; // 编译错误  b 是变量 不是常量。
</span><span class="c1"></span>
<span class="err">​</span>				<span class="kt">byte</span> <span class="n">d</span> <span class="o">=</span> <span class="n">100</span><span class="o">+</span><span class="n">20</span><span class="o">;</span> <span class="c1">// 正确的  常量的运算， 在编译成class期间， 就已经把 100+20  变成了120 
</span><span class="c1"></span><span class="err">​</span>					<span class="c1">// 也就是说 等这句话翻译到了class文件里面 就变成了 byte d = 120; // 就又符合常量优化机制了。
</span><span class="c1"></span>
<span class="err">​</span>				<span class="kt">byte</span> <span class="n">e</span> <span class="o">=</span> <span class="n">100</span><span class="o">;</span>
<span class="err">​</span>				<span class="kt">byte</span> <span class="n">f</span> <span class="o">=</span> <span class="n">e</span><span class="o">+</span><span class="n">20</span> <span class="o">;</span> <span class="c1">// 编译报错。  e是变量
</span></code></pre></div><p>​		3：	写一个小数常量的时候，小数常量也是有数据类型的， double类型。</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">31</span><span class="o">.</span><span class="na">4</span><span class="o">);</span> <span class="c1">// 31.4 是常量  同时也是 double数据类型的。
</span><span class="c1"></span>
<span class="err">​</span>				<span class="kt">double</span> <span class="n">d</span> <span class="o">=</span> <span class="n">31</span><span class="o">.</span><span class="na">4</span><span class="o">;</span>
<span class="err">​</span>			<span class="c1">//float f = 31.4 ; // 编译报错。 比int大的类型 没有常量优化机制。  所以double类型不能直接赋值给 float类型。
</span><span class="c1"></span><span class="err">​</span>				<span class="kt">float</span> <span class="n">f</span> <span class="o">=</span> <span class="o">(</span><span class="kt">float</span><span class="o">)</span><span class="n">31</span><span class="o">.</span><span class="na">4</span><span class="o">;</span>
<span class="err">​</span>				
<span class="err">​</span>				<span class="kt">float</span> <span class="n">fl</span> <span class="o">=</span> <span class="n">31</span><span class="o">.</span><span class="na">4F</span><span class="o">;</span> <span class="c1">// 你31.4 默认是double类型， 能不能我们写一个小数的时候 让他默认是 float类型呢， 当然可以了， 你只要在小数后面加一个F 那么这个小数 就会被当做float类型啦。
</span></code></pre></div><p>​		4： long类型的数据后面 为什么要加L</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
				<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
					<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">100</span><span class="o">;</span>
					<span class="kt">long</span> <span class="n">lo</span> <span class="o">=</span> <span class="n">a</span><span class="o">;</span> <span class="c1">// 正确 隐式类型转换
</span><span class="c1"></span>
<span class="err">​</span>					<span class="kt">long</span> <span class="n">lon</span> <span class="o">=</span> <span class="n">100</span><span class="o">;</span> <span class="c1">// 正确。  既然是正确的 那么为什么老师一直说 让我在long类型的数据后面 加一个L呢 实在不懂。
</span><span class="c1"></span>
<span class="err">​</span>					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">100</span><span class="o">);</span> <span class="c1">// 100 是int类型
</span><span class="c1"></span>
<span class="err">​</span>					<span class="c1">//System.out.println(10000000000); //100亿   int类型  （int类型的数据 最大到21亿左右）
</span><span class="c1"></span><span class="err">​</span>					<span class="c1">// 此时 报错了，  100亿已经超过了int数据类型
</span><span class="c1"></span><span class="err">​</span>					<span class="c1">// 但是 直接写一个 整数常量 确实就是int类型的啊， 所以肯定报错。
</span><span class="c1"></span><span class="err">​</span>					<span class="c1">// 所以 我们就想 我们能不能写一个整数的时候 让jvm把他当做是一个long类型的数据呢，而不是int呢， 可以啊 你只需要在数据后面加一个 L就可以了。
</span><span class="c1"></span>
<span class="err">​</span>					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">10000000000L</span><span class="o">);</span>

<span class="err">​</span>					<span class="kt">long</span> <span class="n">lo</span> <span class="o">=</span> <span class="n">100</span><span class="o">;</span>
<span class="err">​</span>				<span class="o">}</span>	
<span class="err">​</span>			<span class="o">}</span>
</code></pre></div><h2 id="运算符">运算符(☆☆☆☆☆)</h2>
<h3 id="算术运算符">算术运算符</h3>
<h4 id="基本算术运算符-">基本算术运算符：+-*/%</h4>
<pre><code>   + ​				
 				 System.out.println(10+10); //20
     ​			
   		 		 System.out.println(+10); // 10  正10
     ​			

​			-
​				System.out.println(10-5); //5
​				System.out.println(-5); // -5  负5
​			
​			/ :
​				System.out.println(10/4); //2
​				System.out.println(10/4.0); //2.5
​				System.out.println(10.0/4); //2.5
​				System.out.println(10.0/4.0); //2.5

​				// 结论： 整数相除得到的是整数，要想得到小数 就必须让小数参与运算。

​				// 为什么？？ 两种不同的数据类型 是没有办法运算的，所以必须先统一为同一种类型再进行运算
​					System.out.println(10/4); //2  10是int类型 4也是int类型 最终结果就应该是int类型
​					System.out.println(10/4.0);  //2.5  10 先转换为 double的10.0 
​			
​			% ： 
​				System.out.println(10%3); //1
​				System.out.println(10%-3);//1
​				System.out.println(-10%3);// -1
​				System.out.println(-10%-3); // -1

​				// 结论： 取的这个余数， 符号和 %左侧的数的符号 是一至的。

​				// 为什么？
​					System.out.println(10%3);   // 10/3 = 3      10 - (3*3) = 1;
​					System.out.println(10%-3);  // 10/-3 =-3     10 - (-3*-3) = 1;
</code></pre><h3 id="字符--码表">字符&ndash;码表：</h3>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">		<span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="sc">&#39;a&#39;</span><span class="o">;</span>
				<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">c</span><span class="o">;</span> 
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span> <span class="c1">//97			
</span></code></pre></div><p>​			ASCII编码：
​				&lsquo;a&rsquo; &ndash;97
​				&lsquo;A&rsquo; &ndash;65
​				&lsquo;0&rsquo; &ndash;48</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="sc">&#39;a&#39;</span><span class="o">;</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">c</span><span class="o">+</span><span class="n">1</span><span class="o">);</span>   <span class="c1">// 98
</span><span class="c1">// 报错  // 当时你说报错 是因为 字符和数字就加不了，  现在告诉你了 可以加
</span><span class="c1">// a1   //  c 是char类型， 1是int类型， 两个进行运算 必须统一为同一种类型， char会自动提升为int类型。 
</span><span class="c1">// b   // 结构是98  并没有转换回 char类型。
</span><span class="c1"></span><span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="sc">&#39;a&#39;</span><span class="o">;</span>
<span class="kt">char</span> <span class="n">d</span> <span class="o">=</span> <span class="o">(</span><span class="kt">char</span><span class="o">)(</span><span class="sc">&#39;a&#39;</span><span class="o">+</span><span class="n">1</span><span class="o">);</span> <span class="c1">//b
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">d</span><span class="o">);</span> <span class="c1">//b
</span><span class="c1">// 96  // 你记成了 a是95了。
</span></code></pre></div><p>​</p>
<h4 id="字符串操作">字符串+操作：</h4>
<p>​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;a&#34;</span> <span class="o">+</span> <span class="n">1</span><span class="o">);</span> <span class="c1">//  同样的道理 两个数据进行运算 必须统一为同一种类型
</span><span class="c1"></span><span class="err">​</span>										<span class="c1">// 无论什么类型 和字符串进行+运算 所有类型都必须转换为 字符串类型。 在和字符串进行运算(拼接)
</span><span class="c1"></span>    <span class="err">​</span>										<span class="c1">// a1
</span><span class="c1"></span>
    <span class="err">​</span>			<span class="n">题目</span><span class="err">：</span><span class="n">请猜测他的输出结果</span>
    <span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">10</span><span class="o">+</span><span class="n">10</span><span class="o">+</span><span class="n">20</span><span class="o">+</span><span class="s">&#34;java&#34;</span><span class="o">+</span><span class="n">20</span><span class="o">+</span><span class="n">20</span><span class="o">+</span><span class="s">&#34;javaEE&#34;</span><span class="o">+(</span><span class="n">20</span><span class="o">+</span><span class="n">20</span><span class="o">)+</span><span class="s">&#34;havaee&#34;</span><span class="o">+</span><span class="n">10</span><span class="o">+(</span><span class="n">10</span><span class="o">+</span><span class="n">20</span><span class="o">)+</span><span class="n">30</span><span class="o">);</span>
<span class="err">​</span>								<span class="c1">// 10+10+20+&#34;java&#34;+20+20+&#34;javaEE&#34;+40+&#34;havaee&#34;+10+30+30
</span><span class="c1"></span>    <span class="err">​</span>								<span class="c1">// &#34;40java2020javaEE40havaee103030&#34;
</span><span class="c1"></span>
    <span class="err">​</span>			<span class="n">题目</span><span class="err">：</span>
    <span class="err">​</span>				<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="err">​</span>				<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
    <span class="err">​</span>					<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
        <span class="err">​</span>						<span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="err">​</span>						<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        <span class="err">​</span>						<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        <span class="err">​</span>						<span class="c1">// 请补齐后面的代码 需求： 当用户输入 第一个数4  第二个数5的时候，  黑窗口显示  4*5=20 
</span><span class="c1"></span>            <span class="err">​</span>						<span class="c1">//........
</span><span class="c1"></span>            <span class="err">​</span>						<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">+</span><span class="s">&#34;*&#34;</span><span class="o">+</span><span class="n">b</span><span class="o">+</span><span class="s">&#34;=&#34;</span><span class="o">+(</span><span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="o">));</span>
        <span class="err">​</span>					<span class="o">}</span>
    <span class="err">​</span>				<span class="o">}</span>
</code></pre></div><h3 id="自增自减运算符">自增自减运算符：</h3>
<pre><code>			// ++  自身增加1   -- 自身减少1
​	
​			/*
​			// 不管++ 放在后面 还是放在前面  只要这个变量经过一次++运算  那么这个变量自己就会增加1
​			int a  = 10;
​			a++;
​			System.out.println(a); //11

​			//20++;
​			//System.out.println(20);

​			int b = 10;
​			++b;
​			System.out.println(b);  //11

​			*/
</code></pre><p>​			<strong>表达式的概念</strong> 
​			 <strong>用运算符连接起来的式子 叫做 表达式。</strong><br>
​			 <strong>表达式 有两个特点  1：一般不能单独成语句   2： 表达式会有一个结果。</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">        <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
        <span class="err">​</span>			<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span>
        <span class="err">​</span>			<span class="c1">//a+b; // 报错 不是语句
</span><span class="c1"></span>        <span class="err">​</span>			<span class="c1">//30; // 报错 不是语句
</span><span class="c1"></span>
        <span class="err">​</span>			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">30</span><span class="o">);</span>
        <span class="err">​</span>			<span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">30</span><span class="o">;</span>

        <span class="err">​</span>			<span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">;</span>   <span class="c1">// 运算符是有优先级的。  先算乘除后算甲减 有小伙好的先算小括号。
</span><span class="c1"></span>        <span class="err">​</span>			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">d</span><span class="o">);</span> <span class="c1">//30
</span><span class="c1"></span>
        <span class="err">​</span>			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;============&#34;</span><span class="o">);</span>
        <span class="err">​</span>			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">);</span>

        <span class="err">​</span>			<span class="c1">//=================
</span><span class="c1"></span>        <span class="err">​</span>			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;---------------&#34;</span><span class="o">);</span>
        <span class="err">​</span>			<span class="c1">// 同理  ++ 和-- 他们链接起来的式子 也是表达式。
</span><span class="c1"></span>        <span class="err">​</span>			<span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
        <span class="err">​</span>			<span class="kt">int</span> <span class="n">f</span> <span class="o">=</span> <span class="n">e</span><span class="o">++;</span>  <span class="c1">// ++放后面  整体表达式的结果取的是变量+1之前的值。
</span><span class="c1"></span>        <span class="err">​</span>			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">f</span><span class="o">);</span> <span class="c1">//10
</span><span class="c1"></span>        <span class="err">​</span>			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">);</span> <span class="c1">//11
</span><span class="c1"></span>
        <span class="err">​</span>			<span class="kt">int</span> <span class="n">g</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
        <span class="err">​</span>			<span class="kt">int</span> <span class="n">h</span> <span class="o">=</span> <span class="o">++</span><span class="n">g</span><span class="o">;</span>  <span class="c1">// ++放前面  整体表达式的结果取的是变量+1之后的值。
</span><span class="c1"></span>        <span class="err">​</span>			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">h</span><span class="o">);</span> <span class="c1">//11	
</span><span class="c1"></span>        <span class="err">​</span>			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">g</span><span class="o">);</span> <span class="c1">//11
</span></code></pre></div><p>​			// ++ 无论放在前面还是后面，  只要经过++ ，自身绝对会增加1
​			// 放前面和放后面 不同的是
​				// 整体表达式的结果不同。
​					//++放后面  整体表达式的结果取的是变量+1之前的值。
​					//++放前面  整体表达式的结果取的是变量+1之后的值</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="c1">//	题目1：
</span><span class="c1"></span><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="c1">//10     11	 9
</span><span class="c1"></span><span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="n">a</span><span class="o">++</span> <span class="o">+</span> <span class="o">++</span><span class="n">b</span> <span class="o">+</span> <span class="o">--</span><span class="n">c</span><span class="o">;</span>
<span class="c1">//d = 
</span><span class="c1">//	表达式的结果
</span><span class="c1">//	= 表达式1 + 表达式2 + 表达式3
</span><span class="c1"></span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span> <span class="c1">//11
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span> <span class="c1">//11
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">c</span><span class="o">);</span> <span class="c1">//9
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">d</span><span class="o">);</span> <span class="c1">//30
</span></code></pre></div><p>​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="c1">//	题目2：
</span><span class="c1"></span><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="c1">//10    10	10		9	  8   10
</span><span class="c1"></span><span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="n">a</span><span class="o">++</span> <span class="o">+</span> <span class="n">b</span><span class="o">++</span> <span class="o">+</span> <span class="n">c</span><span class="o">--</span> <span class="o">+</span> <span class="o">--</span><span class="n">d</span> <span class="o">+</span> <span class="o">--</span><span class="n">c</span><span class="o">+</span> <span class="o">++</span><span class="n">d</span><span class="o">;</span>
<span class="c1">//a=11  b=11  c=9   d=9   c=8   d=10
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span> <span class="c1">//11
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span> <span class="c1">//11
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">c</span><span class="o">);</span> <span class="c1">//8
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">d</span><span class="o">);</span> <span class="c1">//10
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">);</span> <span class="c1">//57
</span></code></pre></div><h3 id="赋值运算符">赋值运算符：</h3>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="c1">//	普通赋值运算符 =
</span><span class="c1"></span><span class="err">​</span>			<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="err">​</span>		
    <span class="err">​</span>	<span class="c1">//	复合赋值运算符：
</span><span class="c1"></span>    <span class="err">​</span>			<span class="o">+=</span> <span class="o">-=</span> <span class="o">*=</span> <span class="o">/=</span> <span class="o">%=</span>

    <span class="err">​</span>			<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="err">​</span>			<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span>
<span class="err">​</span>			<span class="n">b</span> <span class="o">+=</span> <span class="n">a</span><span class="o">;</span> <span class="c1">// b = b+a; // 30
</span><span class="c1"></span><span class="err">​</span>			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span> <span class="c1">//30
</span><span class="c1"></span>
<span class="err">​</span>			<span class="n">注意</span><span class="err">：</span> <span class="n">复合赋值运算符</span> <span class="n">底层有一个强制类型转换的动作</span><span class="err">。</span>
    <span class="err">​</span>				<span class="kt">short</span> <span class="n">s</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="err">​</span>				<span class="kt">byte</span> <span class="n">b</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span>
<span class="err">​</span>				<span class="n">b</span><span class="o">+=</span><span class="n">s</span><span class="o">;</span> <span class="c1">// 正确的  底层 b = (byte)(b+s);  // b 先转为int类型   s也转为int类型 相加之后是int类型  但是  强制类型转为了 byte
</span><span class="c1"></span><span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
</code></pre></div><h3 id="比较运算符">比较运算符</h3>
<p>比较运算的结果全部都是boolean类型的数据。</p>
<pre><code>        &gt; &lt; &gt;= &lt;= == !=
</code></pre>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span>
		<span class="c1">//  a&gt;b; // 表达式不能单独成语句。 
</span><span class="c1"></span>		<span class="c1">// false;
</span><span class="c1"></span>		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">&gt;</span><span class="n">b</span><span class="o">);</span> <span class="c1">// false 
</span><span class="c1"></span>		<span class="kt">boolean</span> <span class="n">bo</span> <span class="o">=</span> <span class="n">a</span><span class="o">&gt;</span><span class="n">b</span> <span class="o">;</span> <span class="c1">// false
</span></code></pre></div><h3 id="逻辑运算符">逻辑运算符</h3>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="cm">/*	a 在 0 - 100的范围吗？
</span><span class="cm">​			System.out.println( 0&lt;a &amp; a&lt;100 );
</span><span class="cm">
</span><span class="cm">​		&amp; : 并且的意思
</span><span class="cm">​			一箱酒(两瓶)，里面有一瓶真酒 有一瓶假酒  ，请问你认为 这一箱酒是真的还是假的， 你肯定认为是假的 不买。
</span><span class="cm">​			
</span><span class="cm">​			并且， 有假则假。  有false则false
</span><span class="cm">​		
</span><span class="cm">​		| ： 或者的意思
</span><span class="cm">​			我两只手 每一只收里面有一个苹果， 一个是好苹果 另一个是烂苹果， 请问你选哪一个。  肯定选好的。
</span><span class="cm">​			
</span><span class="cm">​			或者， 有真则真，  有true 则true
</span><span class="cm">​		
</span><span class="cm">​		^ : 异或  异 ：不同   ， 或：通假字 惑  疑惑。    意思：疑惑是否不同吗
</span><span class="cm">
</span><span class="cm">​			如果是 不同，  true，  不是 false*/</span>

<span class="err">​</span>			<span class="kc">true</span> <span class="o">^</span> <span class="kc">true</span>  <span class="o">----</span><span class="kc">false</span> 
    <span class="err">​</span>			<span class="kc">false</span> <span class="o">^</span> <span class="kc">true</span>  <span class="o">---</span><span class="kc">true</span>

    <span class="err">​</span>			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="kc">true</span> <span class="o">!=</span> <span class="kc">true</span><span class="o">);</span> <span class="c1">//false
</span><span class="c1"></span><span class="err">​</span>			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="sc">&#39;a&#39;</span><span class="o">!=</span><span class="sc">&#39;b&#39;</span><span class="o">);</span> <span class="c1">//true
</span><span class="c1"></span><span class="err">​</span>			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">10</span><span class="o">!=</span><span class="n">20</span><span class="o">);</span> <span class="c1">//true
</span><span class="c1"></span><span class="o">!</span> <span class="o">:</span> <span class="n">取反</span><span class="err">。</span>
</code></pre></div><h3 id="短路逻辑运算符">短路逻辑运算符：</h3>
<p>​		&amp;&amp; 和&amp; 的结果是一样的。
​		&amp;&amp; 效率高。<br>
​		并且， 有false则false。 如果左侧看到false了  右侧就不执行了。
​</p>
<p>​		|| 和| 的结果是一样的。
​		|| 效率高。<br>
​		或者， 有true则true。 如果左侧看到true了  右侧就不执行了。</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span>
<span class="c1">//System.out.println(a&gt;100 &amp;&amp; b++); // &amp;&amp; 逻辑运算  只能运算 boolean类型的数据。
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">&gt;</span><span class="n">100</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="o">++</span> <span class="o">&gt;</span><span class="n">0</span><span class="o">);</span> 
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
</code></pre></div><h3 id="三元运算符">三元运算符:</h3>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="c1">//一元运算符： 元是元素的意思， 参与运算的元素最多是1个
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(+</span><span class="n">10</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(-</span><span class="n">10</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="n">a</span><span class="o">++;</span>
<span class="o">--</span><span class="n">a</span><span class="o">;</span>

<span class="c1">//二元运算符：
</span><span class="c1"></span><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">&gt;</span><span class="n">b</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="kc">true</span><span class="o">&amp;</span><span class="kc">false</span><span class="o">);</span>

<span class="c1">//三元运算符：
</span><span class="c1">//格式： 关系表达式? 表达式1 : 表达式2; 
</span><span class="c1"></span>
<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span>

<span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">&gt;</span><span class="n">b</span> <span class="o">?</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span> <span class="o">:</span> <span class="n">a</span><span class="o">-</span><span class="n">b</span><span class="o">;</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">c</span><span class="o">);</span> <span class="c1">//-10
</span><span class="c1"></span>
<span class="c1">// a&gt;b? a+b:a-b;  //编译错误的  表达式不能成语句
</span><span class="c1">// -10;
</span><span class="c1"></span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span> <span class="n">a</span><span class="o">&gt;</span><span class="n">b</span><span class="o">?</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">:</span><span class="n">a</span><span class="o">-</span><span class="n">b</span> <span class="o">);</span>

<span class="c1">//案例：
</span><span class="c1"></span><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="n">a</span><span class="o">&gt;</span><span class="n">b</span> <span class="o">?</span> <span class="n">a</span> <span class="o">:</span> <span class="n">b</span><span class="o">;</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">max</span><span class="o">);</span>

<span class="c1">//案例：键盘录入三个数， 使用三元运算符 求出 三个数中最大的那个值。
</span><span class="c1"></span><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
        <span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>

        <span class="kt">int</span> <span class="n">temp</span>  <span class="o">=</span> <span class="n">a</span><span class="o">&gt;</span> <span class="n">b</span> <span class="o">?</span> <span class="n">a</span> <span class="o">:</span><span class="n">b</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="n">temp</span> <span class="o">&gt;</span> <span class="n">c</span> <span class="o">?</span> <span class="n">temp</span> <span class="o">:</span> <span class="n">c</span><span class="o">;</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">max</span><span class="o">);</span>

        <span class="kt">int</span> <span class="n">max1</span> <span class="o">=</span> <span class="n">a</span> <span class="o">&gt;</span><span class="n">b</span> <span class="o">?</span> <span class="o">(</span><span class="n">a</span><span class="o">&gt;</span><span class="n">c</span><span class="o">?</span><span class="n">a</span><span class="o">:</span><span class="n">c</span><span class="o">)</span> <span class="o">:</span> <span class="o">(</span><span class="n">b</span><span class="o">&gt;</span><span class="n">c</span><span class="o">?</span><span class="n">b</span><span class="o">:</span><span class="n">c</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">max1</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div><h2 id="逻辑语句">逻辑语句(☆☆☆☆☆)</h2>
<h3 id="顺序结构">顺序结构</h3>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;haha1&#34;</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;haha1&#34;</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;haha1&#34;</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;haha1&#34;</span><span class="o">);</span>
</code></pre></div><h3 id="选择结构">选择结构</h3>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;haha1&#34;</span><span class="o">);</span>				
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;haha1&#34;</span><span class="o">);</span><span class="c1">// 选择性的执行。
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;haha1&#34;</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;haha1&#34;</span><span class="o">);</span>

<span class="k">if</span>
<span class="n">三种格式</span><span class="err">：</span>
<span class="k">if</span> <span class="n">第一种格式</span>
<span class="nf">if</span> <span class="o">(</span><span class="n">条件表达式</span><span class="o">){</span>
<span class="n">语句体</span><span class="o">;</span>
<span class="o">}</span>

<span class="c1">//举例：
</span><span class="c1"></span><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
<span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">score</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
<span class="k">if</span> <span class="o">(</span><span class="n">score</span> <span class="o">&gt;</span> <span class="n">60</span><span class="o">){</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;及格&#34;</span><span class="o">);</span>
<span class="o">}</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;结束&#34;</span><span class="o">);</span>
<span class="o">}</span>
<span class="o">}</span>
<span class="cm">/*
</span><span class="cm">if第二种格式
</span><span class="cm">if (条件表达式){
</span><span class="cm">语句体1;
</span><span class="cm">}else{
</span><span class="cm">语句体2;
</span><span class="cm">}
</span><span class="cm">*/</span>

<span class="c1">//举例：
</span><span class="c1"></span><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
<span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">score</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
<span class="k">if</span> <span class="o">(</span><span class="n">score</span> <span class="o">&gt;=</span> <span class="n">60</span><span class="o">){</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;及格&#34;</span><span class="o">);</span>
<span class="o">}</span><span class="k">else</span><span class="o">{</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;不及格&#34;</span><span class="o">);</span>
<span class="o">}</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;结束&#34;</span><span class="o">);</span>
<span class="o">}</span>
<span class="o">}</span>

<span class="k">if</span> <span class="n">第三种格式</span>
<span class="nf">if</span> <span class="o">(</span><span class="n">条件表达式1</span><span class="o">){</span>
<span class="n">语句体1</span><span class="o">;</span>
<span class="o">}</span><span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">条件表达式2</span><span class="o">){</span>
<span class="n">语句体2</span><span class="o">;</span>
<span class="o">}</span><span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">条件表达式3</span><span class="o">){</span>
<span class="n">语句体3</span><span class="o">;</span>
<span class="o">}</span><span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">条件表达式4</span><span class="o">){</span>
<span class="n">语句体4</span><span class="o">;</span>
<span class="o">}</span><span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">条件表达式5</span><span class="o">){</span>
<span class="n">语句体5</span><span class="o">;</span>
<span class="o">}</span><span class="k">else</span><span class="o">{</span>
<span class="n">语句体6</span><span class="o">;</span>
<span class="o">}</span>

<span class="n">举例1</span><span class="err">：</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
<span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">score</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
<span class="k">if</span> <span class="o">(</span><span class="n">score</span> <span class="o">&gt;=</span><span class="n">90</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;=</span><span class="n">100</span><span class="o">){</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;优秀&#34;</span><span class="o">);</span>
<span class="o">}</span><span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">score</span> <span class="o">&gt;=</span><span class="n">80</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;=</span><span class="n">90</span><span class="o">){</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;良好&#34;</span><span class="o">);</span>
<span class="o">}</span><span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">score</span> <span class="o">&gt;=</span><span class="n">70</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;=</span><span class="n">80</span><span class="o">){</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;差不多儿&#34;</span><span class="o">);</span>
<span class="o">}</span><span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">score</span> <span class="o">&gt;=</span><span class="n">60</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;=</span><span class="n">70</span><span class="o">){</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;及格&#34;</span><span class="o">);</span>
<span class="o">}</span><span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">score</span> <span class="o">&gt;=</span><span class="n">50</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;=</span><span class="n">60</span><span class="o">){</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;不太好&#34;</span><span class="o">);</span>
<span class="o">}</span><span class="k">else</span><span class="o">{</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;太不好了&#34;</span><span class="o">);</span>
<span class="o">}</span>

<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;结束&#34;</span><span class="o">);</span>
<span class="o">}</span>
<span class="o">}</span>

<span class="n">举例2</span><span class="err">：</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
<span class="cm">/*
</span><span class="cm">需求：键盘录入学生考试成绩, 根据成绩程序给出不同的奖励。
</span><span class="cm">
</span><span class="cm">95~100分 : 自行车一辆
</span><span class="cm">90~94分  : 游乐场一次
</span><span class="cm">80~89分	 : 变形金刚一个
</span><span class="cm">80分以下 : 挨顿揍, 这座城市又多了一个伤心的人~
</span><span class="cm">
</span><span class="cm">步骤:
</span><span class="cm">1. 使用Scanner录入考试成绩
</span><span class="cm">2. 判断成绩是否在合法范围内 0~100
</span><span class="cm">非法的话, 给出错误提示
</span><span class="cm">3. 在合法的语句块中判断成绩范围符合哪一个奖励
</span><span class="cm">并给出对应的奖励.
</span><span class="cm">
</span><span class="cm">*/</span>
<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
<span class="c1">// 1. 使用Scanner录入考试成绩
</span><span class="c1"></span><span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;请输入您的成绩:&#34;</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">score</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
<span class="c1">// 2. 判断成绩是否在合法范围内 0~100
</span><span class="c1"></span><span class="k">if</span><span class="o">(</span><span class="n">score</span> <span class="o">&gt;=</span><span class="n">0</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;=</span> <span class="n">100</span><span class="o">){</span>
<span class="c1">// 合法成绩
</span><span class="c1">// 3. 在合法的语句块中判断成绩范围符合哪一个奖励
</span><span class="c1"></span><span class="k">if</span><span class="o">(</span><span class="n">score</span> <span class="o">&gt;=</span> <span class="n">95</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;=</span> <span class="n">100</span><span class="o">){</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;自行车一辆&#34;</span><span class="o">);</span>
<span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">score</span> <span class="o">&gt;=</span> <span class="n">90</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;=</span> <span class="n">94</span><span class="o">){</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;游乐场一次&#34;</span><span class="o">);</span>
<span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">score</span> <span class="o">&gt;=</span> <span class="n">80</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;=</span> <span class="n">89</span><span class="o">){</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;变形金刚一个&#34;</span><span class="o">);</span>
<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;挨顿揍, 这座城市又多了一个伤心的人~&#34;</span><span class="o">);</span>
<span class="o">}</span>
<span class="o">}</span><span class="k">else</span><span class="o">{</span>
<span class="c1">// 非法的话, 给出错误提示
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;您的成绩输入有误!&#34;</span><span class="o">);</span>
<span class="o">}</span>
<span class="o">}</span>
<span class="o">}</span>
<span class="k">switch</span> 

<span class="n">循环结构</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;haha1&#34;</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;haha1&#34;</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;haha1&#34;</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;haha1&#34;</span><span class="o">);</span>
</code></pre></div><p>​</p>
]]></content>
		</item>
		
		<item>
			<title>Day01 介绍java</title>
			<link>https://demon-github1996.github.io/posts/day01/</link>
			<pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate>
			
			<guid>https://demon-github1996.github.io/posts/day01/</guid>
			<description>介绍java： ​	java 是一门语言， 汉语也是一门语言，是人和人交流的语言， java是人和计算机交流的语言， c c# c++ Python php&amp;hellip;. ​	1995年 高司令 创造的。
java的三个方向： JavaSE ： 方向就是做 桌面应用的 PC端软件 QQ LOL WOW DNF CF &amp;hellip;
​	但是java做这种软件 效果非常的差 界面非常的丑。 所以java也就放弃了这个方向。 ​	但是 JavaSE 是学习其他 任何方向的基础 Android javaEE(服务器) 大数据
JavaME ： 嵌入式驱动开发 遥控器驱动 &amp;hellip;.
​	Android 方向了。
JavaEE ： 做服务器的。 大型web服务器
​	淘宝 ​	京东 ​	&amp;hellip;.
java的火： ​	面向对象语言 ​	开源 ​	跨平台： ​	java的跨平台 是依赖 java虚拟机来跨平台的。 ​	跨平台的好处： 为开发人员 提高了开发效率 （本来开发3个qq，现在 开发一个qq就可以了。）</description>
			<content type="html"><![CDATA[<h1 id="介绍java">介绍java：</h1>
<p>​		java 是一门语言， 汉语也是一门语言，是人和人交流的语言， java是人和计算机交流的语言，  c c# c++ Python php&hellip;.
​			1995年 高司令 创造的。</p>
<h2 id="java的三个方向">java的三个方向：</h2>
<h5 id="javase">JavaSE</h5>
<p>： 方向就是做 桌面应用的 PC端软件 QQ LOL WOW DNF CF &hellip;</p>
<p>​				但是java做这种软件 效果非常的差  界面非常的丑。  所以java也就放弃了这个方向。
​				但是 JavaSE 是学习其他 任何方向的基础 Android javaEE(服务器) 大数据</p>
<h5 id="javame-">JavaME ：</h5>
<p>嵌入式驱动开发  遥控器驱动 &hellip;.</p>
<p>​			Android 方向了。</p>
<h5 id="javaee-">JavaEE ：</h5>
<p>做服务器的。 大型web服务器</p>
<p>​				淘宝
​				京东
​				&hellip;.</p>
<h5 id="java的火">java的火：</h5>
<p>​			面向对象语言
​			开源
​			跨平台：
​				java的跨平台 是依赖 java虚拟机来跨平台的。
​			跨平台的好处： 为开发人员 提高了开发效率 （本来开发3个qq，现在 开发一个qq就可以了。）</p>
<h5 id="jdk-jre-jvm-">jdk jre jvm ：</h5>
<p>​			
​			Oracle 公司 并没有 jvm的安装包。 但是他却提供了 jdk的安装包。  jre的安装包。</p>
<h6 id="jdk">jdk：</h6>
<p>​				开发工具： 编译工具 javac.exe   jar.exe  javawar.exe  javadoc.exe</p>
<h6 id="jre">jre：</h6>
<p>​					核心类库 : 提供大量的类  String  System
​					jvm：解析程序中的一些语法格式和逻辑。
​					
​					一个再简单的程序 执行 必须依赖两个东西 核心类库 和jvm   这两个也就是组成了jre</p>
<h6 id="jdk的安装和下载">jdk的安装和下载：</h6>
<p>​		1：有的同学已经安装了jdk了， 但是安装的 jdk11版本  jdk8版本， 都可以。 不需要卸载。 就使用已经安装的版本就可以了。
​		2：一个电脑上可以安装多个 jdk ，同样你也不需要卸载 ， 
​			那以后我到底用的哪个jdk啊？  等会儿配置环境变量 你就知道了，   你环境变量里面配置的哪一个 就是用的哪一个。
​		3：以后只要是安装 开发类的软件， 安装路径 都尽量别有中文和空格。</p>
<h2 id="helloworld">HelloWorld</h2>
<h3 id="dos命令">dos命令：</h3>
<p>​		d: 切换盘
​		cd : 进入目录。  c change切换   d  directory目录
​		dir : 展示目录下的所有文件和目录     dir   directory目录
​			每一个目录(除了盘符的) 都有两个隐含的目录 (.   .. )
​			.代表的是当前目录，  所以 cd.  进入当前目录
​			.. 代表的是 上一级目录
​				所以cd.. 是回退到上一级目录</p>
<p>​			在linux操作系统中，  所有目录的根目录 都是 / 目录   / 这是一个目录  是所有目录的跟目录。</p>
<p>​			所以 cd / 就是进入根目录
​		
​		cls 是清屏的意思
​		exit 退出cmd</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="n">书写</span><span class="err">：</span>
<span class="kd">class</span> <span class="nc">HelloWorld</span> <span class="o">{</span>
<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;shfashdfjadh&#34;</span><span class="o">);</span>
<span class="o">}</span>
<span class="o">}</span>
</code></pre></div><p><strong><!-- raw HTML omitted -->此处有错题笔记详见Note1<!-- raw HTML omitted --></strong></p>
<h1 id="java的重要内容">JAVA的重要内容：</h1>
<h2 id="编写编译运行">编写编译运行(☆☆☆☆☆)：</h2>
<h3 id="1编写">1.	编写：</h3>
<p>​				新建一个txt文件， 然后后缀改为.java ，此处注意 操作系统尽量不要隐藏文件拓展名，否则无法更改拓展名。
​</p>
<p>​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>  <span class="c1">// args   arguments
</span><span class="c1"></span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;helloworld&#34;</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;helloworld1&#34;</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div><p>​			注意：文件名字 和  class 后的名字 要一致。
​</p>
<h3 id="2编译-javac-demojava">2	编译： javac Demo.java</h3>
<p>​			编译成功的标志是  生成一个class文件。
​			注意： 你需要先用cmd进入到 Demo.java的目录 才可以编译，否则找不到Demo.java
​</p>
<h3 id="3运行-java-demo">3	运行： java Demo</h3>
<p>​			注意：运行的是class文件，但是不需要 加.class 
​	
​	HelloWorld程序的详细解释：
​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="c1">// public  起到一个限定的做。 类名 必须和文件名要相同， 不同就会报错。
</span><span class="c1"></span><span class="err">​</span>		<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>   <span class="c1">// 今后我们所有的代码 必须要写在类中的， 所以要写其他的代码必须要先写一个类的。
</span><span class="c1"></span>    <span class="err">​</span>			
        <span class="err">​</span>			<span class="c1">// main方法。程序的入口
</span><span class="c1"></span>        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">sdafsdfasdfasdfasdfasdfasdfadfasdfadafasdf</span><span class="o">){</span>  <span class="c1">// args   arguments
</span><span class="c1"></span>        <span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;helloworld&#34;</span><span class="o">);</span>
        <span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;helloworld1&#34;</span><span class="o">);</span>
        <span class="err">​</span>			<span class="o">}</span>

    <span class="err">​</span>		<span class="o">}</span>
</code></pre></div><h2 id="代码的书写习惯">代码的书写习惯：</h2>
<p>(不是语法，是程序员们的习惯，你可以不遵守，不会报错，但是其他的程序员看到你这么写了 就会给你一个大大的中指)
当你遇到一个{ 的时候 换行。 并且和上一行搓一个tab键。
遇到; 换行，和上一行对齐就可以了， 不需要搓tab
}必须和 对应的{ 的那一行的行首对齐。</p>
<pre><code>    这么做的好处：
        1：不用把所有的错误都发生在一行。
        2：能够清晰的看到代码的 包含关系。
</code></pre>
<h2 id="乱码问题">乱码问题：</h2>
<p>​		新建一个txt文件，   如果你是win10操作系统， txt软件编写文字的默认编码是 utf-8编码。
​		但是 打开的cmd ，黑窗口的默认编码 是 GBK(ANSI) 本地编码。
​		
​		两个编码不一致 中文就会乱码，
​		所以 如果我们使用记事本新建一个文件 需要另存为 <strong>ANSI</strong>的
​		如果我们使用 notepad++来新建一个文件  则需要设置 notepad++ 的新建选项。</p>
<h2 id="java的基本语法">java的基本语法(☆☆☆☆☆)：</h2>
<h3 id="java程序的组成">java程序的组成：</h3>
<p>（无论程序多么复杂都是有如下几部分组成的）
注释(非必须)：
关键字：
标识符：
数据：
常量
变量
符号：
基本的符号：
空格：  把单词间隔开的符号。
运算符：</p>
<h3 id="注释">注释(☆☆☆)：</h3>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">                            <span class="n">单行注释</span>
                                <span class="err">​</span>				<span class="c1">// sdfsdfsdfs
</span><span class="c1"></span>                                <span class="err">​</span>			<span class="n">多行注释</span><span class="err">：</span>
                                <span class="err">​</span>				<span class="cm">/*
</span><span class="cm">                                                ​					fsdfsdfadsfasdfasdf
</span><span class="cm">                                                ​					adfasdfsadfasdfas
</span><span class="cm">                                                ​				*/</span>

                                <span class="err">​</span>			<span class="cm">/*sdfsdafasdfasdfasdf*/</span>
                                <span class="err">​</span>		
                                <span class="err">​</span>		<span class="n">文档注释</span><span class="err">：</span>
                                <span class="err">​</span>			<span class="cm">/**
</span><span class="cm">
</span><span class="cm">                                                ​			*/</span>
</code></pre></div><h3 id="关键字">关键字(☆☆☆☆☆)：</h3>
<p>java这门语言 规定的 给了一些单词特有的含义，这些单词就是关键字。
<strong>public</strong> : 公共的，  特殊含义， 被public修饰的类 类名字 必须和java文件的名字相同。
<strong>class</strong> 类
<strong>static</strong> 静态的
<strong>void</strong> 方法没有返回值的</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">		<span class="c1">// 注释
</span><span class="c1"></span>		<span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
			<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;sdfsdfs&#34;</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>
</code></pre></div><h3 id="常量数据">常量数据(☆☆☆☆☆)：</h3>
<p>​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">		<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>   
<span class="err">​</span>				<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span> 
<span class="err">​</span>					<span class="c1">//字符串常量
</span><span class="c1"></span><span class="err">​</span>					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;&#34;</span><span class="o">);</span> <span class="c1">// 没有内容
</span><span class="c1"></span><span class="err">​</span>					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;adfkasd黑马jfkasdjlk&#34;</span><span class="o">);</span>  
<span class="err">​</span>					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;a&#34;</span><span class="o">);</span> 
<span class="err">​</span>					

<span class="err">​</span>				<span class="c1">//字符常量
</span><span class="c1"></span><span class="err">​</span>				<span class="c1">//System.out.println(&#39;&#39;); //报错。
</span><span class="c1"></span><span class="err">​</span>				<span class="c1">//System.out.println(&#39;ab&#39;);  //报错。
</span><span class="c1"></span><span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="sc">&#39;中&#39;</span><span class="o">);</span>
<span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="sc">&#39;*&#39;</span><span class="o">);</span>

<span class="err">​</span>				<span class="c1">//整数常量
</span><span class="c1"></span><span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">10</span><span class="o">);</span>

<span class="err">​</span>				<span class="c1">//小数常量
</span><span class="c1"></span><span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">10</span><span class="o">.</span><span class="na">14</span><span class="o">);</span>

<span class="err">​</span>				<span class="c1">//布尔常量
</span><span class="c1"></span><span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
<span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>

<span class="err">​</span>				<span class="c1">//空常量  用来占位。
</span><span class="c1"></span><span class="err">​</span>				<span class="c1">//System.out.println(null);  // 报错 				
</span><span class="c1"></span><span class="err">​</span>			<span class="o">}</span>
<span class="err">​</span>		<span class="o">}</span>
<span class="err">​</span>		<span class="c1">//我给你10块钱 你去给我买一根冰糕。    // 10是一个 整数常量
</span><span class="c1"></span><span class="err">​</span>		<span class="c1">//我给你钱包 你去给我买一根冰糕。  //钱包是一个变量
</span></code></pre></div><h3 id="变量数据">变量数据(☆☆☆☆☆)：</h3>
<p>​			<strong>定义格式： 数据类型 变量名 =  数据值;</strong>
​</p>
<h4 id="数据类型">数据类型：</h4>
<p>​			bit 和 byte 
​				计算机中就是一个大的电路板，里面集成了很多晶体管，电阻 电容， 直流电 流经电阻，两端会有电势差(电压)  流经电容，直接阻断(低电压)
​				高电压，表示1   低电压 0.<br>
​				我们也把这种一个 信号  叫做 bit 位。
​				但是 你发现了吗 这一个信号 只能要么表示0 要么表示1 那也表示不过来 现实生活中这些庞大的数据啊。
​				8个bit位 为一组， 来表示数据， 我们就把这8个为一组 叫做 byte 字节 计算机最小的存储单元。
​					-128  127
​								
​		<strong>分类</strong>：**
​				**基本数据类型**
​					**整型**
​						**byte    1	-128 127**
​						**short	2   -32768 32767**
​						**int		4   正负21亿左右**
​						**long	8**
​					**浮点型**
​						**float	4**
​						**double	8**
​					**字符型**
​						**char	2**
​					**布尔型**
​						boolean	1 (java的官方声明  boolean 类型没有明确的大小 )**
​				引用数据类型(综合类型)
​					数组
​					类
​					接口
​			
​			表示数据范围的大小顺序：
​				byte &lt; short = char &lt; int &lt; long  &lt;float &lt; double 
​							
​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">	<span class="n">代码</span><span class="err">：</span>
<span class="err">​</span>			<span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
<span class="err">​</span>				<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
<span class="err">​</span>					<span class="c1">//数据类型 变量名 =  数据值;
</span><span class="c1"></span><span class="err">​</span>					<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span><span class="n">10</span><span class="o">;</span>
<span class="err">​</span>					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span> <span class="c1">//10
</span><span class="c1"></span>
<span class="err">​</span>					<span class="kt">byte</span> <span class="n">b</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="err">​</span>					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span> <span class="c1">//10
</span><span class="c1"></span><span class="err">​</span>					
<span class="err">​</span>					<span class="kt">double</span> <span class="n">d</span>  <span class="o">=</span> <span class="n">3</span><span class="o">.</span><span class="na">14</span><span class="o">;</span>
<span class="err">​</span>					<span class="c1">// int c = 3.14;  // 报错。
</span><span class="c1"></span><span class="err">​</span>					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">d</span><span class="o">);</span> <span class="c1">// 3.14
</span><span class="c1"></span>
<span class="err">​</span>					<span class="c1">//int e = true;  //报错。
</span><span class="c1"></span><span class="err">​</span>					<span class="kt">boolean</span> <span class="n">e</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span> 
<span class="err">​</span>					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">);</span> <span class="c1">// true
</span><span class="c1"></span>
<span class="err">​</span>					<span class="kt">char</span> <span class="n">f</span> <span class="o">=</span> <span class="sc">&#39;a&#39;</span><span class="o">;</span>
<span class="err">​</span>					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">f</span><span class="o">);</span> <span class="c1">//a
</span><span class="c1"></span> 						
<span class="err">​</span>				<span class="o">}</span>
<span class="err">​</span>			<span class="o">}</span>
</code></pre></div><p>​		注意事项：
​</p>
<p><!-- raw HTML omitted -->1：变量的定义格式 可以分开，一个是定义 一个是赋值<!-- raw HTML omitted --></p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">	<span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
					<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
						<span class="c1">//int  a = 10;
</span><span class="c1"></span>						<span class="kt">int</span> <span class="n">a</span><span class="o">;</span>
						<span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span> <span class="c1">// 可以的
</span><span class="c1"></span>						<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span> <span class="c1">//10
</span><span class="c1"></span>					<span class="o">}</span>
				<span class="o">}</span>
</code></pre></div><p>​	<!-- raw HTML omitted -->2：同一个范围内(作用域范围，作用域下面讲了) 变量不能重复定义。<!-- raw HTML omitted -->
​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">	<span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
					<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
						<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
						<span class="c1">//int a = 20;   //报错
</span><span class="c1"></span>						<span class="n">a</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span> <span class="c1">//正确
</span><span class="c1"></span>						<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span> <span class="c1">//10
</span><span class="c1"></span>					<span class="o">}</span>
				<span class="o">}</span>
</code></pre></div><p><!-- raw HTML omitted -->3:变量可以一次定义多个<!-- raw HTML omitted --></p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">	<span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
<span class="err">​</span>					<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
<span class="err">​</span>						<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
<span class="err">​</span>						<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span>
<span class="err">​</span>						<span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">30</span><span class="o">;</span>

<span class="err">​</span>						<span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="n">40</span><span class="o">,</span> <span class="n">e</span> <span class="o">=</span> <span class="n">50</span><span class="o">,</span> <span class="n">f</span><span class="o">=</span><span class="n">60</span><span class="o">;</span>

<span class="err">​</span>						<span class="kt">int</span> <span class="n">g</span><span class="o">,</span><span class="n">h</span><span class="o">,</span><span class="n">k</span><span class="o">;</span>
<span class="err">​</span>						<span class="n">g</span> <span class="o">=</span> <span class="n">70</span><span class="o">;</span>
<span class="err">​</span>						<span class="n">h</span> <span class="o">=</span> <span class="n">80</span><span class="o">;</span>
<span class="err">​</span>						<span class="n">k</span> <span class="o">=</span> <span class="n">90</span><span class="o">;</span>
<span class="err">​</span>					<span class="o">}</span>
<span class="err">​</span>				<span class="o">}</span>
<span class="err">​</span>			
</code></pre></div><p><!-- raw HTML omitted -->4:局部变量 使用之前必须先赋值，不赋值不能使用。<!-- raw HTML omitted --></p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
					<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
						<span class="kt">int</span> <span class="n">a</span> <span class="o">;</span>
						<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span> <span class="c1">// 报错  
</span><span class="c1"></span>					<span class="o">}</span>
				<span class="o">}</span>
			
</code></pre></div><p><!-- raw HTML omitted -->5：变量的作用域，只在 从他定义开始一直到当前大括号结束 这一段有效。<!-- raw HTML omitted --></p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">				<span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
					<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
						<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
						<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span> <span class="c1">// 10
</span><span class="c1"></span>						<span class="o">{</span>
							<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span> <span class="c1">//10
</span><span class="c1"></span>							<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span>
							<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span> <span class="c1">//20
</span><span class="c1"></span>						<span class="o">}</span>
						<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span> <span class="c1">//报错
</span><span class="c1"></span>					<span class="o">}</span>
				<span class="o">}</span>
</code></pre></div><p>​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">	<span class="kd">class</span> <span class="nc">Demo1</span> <span class="o">{</span>
					<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
						<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
						<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span> <span class="c1">// 10
</span><span class="c1"></span>						<span class="o">{</span>
							<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span> <span class="c1">//10
</span><span class="c1"></span>							<span class="c1">//int a  = 20;  //报错  因为上面的a 的作用域 包括这里
</span><span class="c1"></span>							<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span>
						<span class="o">}</span>
						<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">30</span><span class="o">;</span><span class="c1">// 
</span><span class="c1"></span>						<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span> <span class="c1">//30
</span><span class="c1"></span>						
					<span class="o">}</span>
				<span class="o">}</span>
			
</code></pre></div><p><!-- raw HTML omitted -->6：float类型的数据后面要加F  long类型的数据后面要加 L<!-- raw HTML omitted --></p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">			<span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
					<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
						<span class="kt">float</span> <span class="n">f</span> <span class="o">=</span> <span class="n">3</span><span class="o">.</span><span class="na">14F</span><span class="o">;</span>
						<span class="kt">long</span> <span class="n">lo</span> <span class="o">=</span> <span class="n">100L</span><span class="o">;</span>
					<span class="o">}</span>
				<span class="o">}</span>
</code></pre></div><hr>
<p>​	<strong>重温变量和常量的定义概念：</strong>
​		<strong>常量：运行过程中其值不不能改变的量。</strong>
​		变量：运行过程中其值可以发生改变的量。**</p>
<p>​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">class</span> <span class="nc">Demo1</span> <span class="o">{</span>
			<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">20</span><span class="o">);</span>

<span class="err">​</span>				<span class="n">20</span> <span class="o">=</span> <span class="n">30</span><span class="o">;</span>
<span class="err">​</span>			<span class="o">}</span>
<span class="err">​</span>		<span class="o">}</span>
</code></pre></div><p>​</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">	<span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
<span class="err">​</span>			<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
<span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">20</span><span class="o">);</span>

<span class="err">​</span>				<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">20</span><span class="o">;</span>
<span class="err">​</span>				<span class="n">a</span> <span class="o">=</span> <span class="n">30</span><span class="o">;</span>
<span class="err">​</span>			<span class="o">}</span>
<span class="err">​</span>		<span class="o">}</span>
<span class="err">​</span>	
</code></pre></div><h4 id="scanner-">Scanner(☆☆☆☆) :</h4>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java">		<span class="c1">//第一步： 导包
</span><span class="c1"></span><span class="err">​</span>		<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="err">​</span>		<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo3</span> <span class="o">{</span>
<span class="err">​</span>			<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
<span class="err">​</span>				<span class="c1">// 第二步： 创建键盘录入对象
</span><span class="c1"></span><span class="err">​</span>				<span class="n">Scanner</span> <span class="n">hh</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span> <span class="c1">// 只有sc可以变。
</span><span class="c1"></span>
<span class="err">​</span>				<span class="c1">// 第三步： 接收键盘录入的数据
</span><span class="c1"></span><span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;请您输入 数字&#34;</span><span class="o">);</span>
<span class="err">​</span>				<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">hh</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
<span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;您输入的数字 如下，您看对不对呢&#34;</span><span class="o">);</span>
<span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>

<span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;请您再输入 数字&#34;</span><span class="o">);</span>
<span class="err">​</span>				<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">hh</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
<span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;您第二次输入的数字 如下，您看对不对呢&#34;</span><span class="o">);</span>
<span class="err">​</span>				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
<span class="err">​</span>			<span class="o">}</span>
<span class="err">​</span>		<span class="o">}</span>
</code></pre></div><h2 id="标识符">标识符(☆☆☆☆☆)：</h2>
<p>起名字</p>
<div class="highlight"><pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">class</span> <span class="nc">Demo3</span> <span class="o">{</span>
				<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
					<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">10</span><span class="o">;</span>
					<span class="c1">//int 100 = 10;
</span><span class="c1"></span>				<span class="o">}</span>
			<span class="o">}</span>
</code></pre></div><p>​			语法规定：
​				1：a到zA到Z0到9 $_
​				2：不能是关键字。
​				3：不能以数字开头</p>
<p>​		约定俗成的习惯：
​			大驼峰 ： 类
​			小驼峰 ： 变量 方法
​			峡谷先锋 ：常量名
​				所有字母都大写，如果多个单词 中间用下划线隔开。  JAVA_HOME</p>
]]></content>
		</item>
		
	</channel>
</rss>
